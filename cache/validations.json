{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "1128bb95db6b16882748dd7168464515f7c36cc5ff4d9ea5cb1a8d1727e633ac",
          "withoutMetadata": "a93e2554d968a78fac12d2fae8bd8270d1eeb72689da92998bd2829f6e1b8741",
          "linkedWithoutMetadata": "a93e2554d968a78fac12d2fae8bd8270d1eeb72689da92998bd2829f6e1b8741"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(bool,uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:30",
        "version": {
          "withMetadata": "083f1cead199553509d9c697f22f310fb7ca846e75eef12cfc24bb8c3f8bb3e9",
          "withoutMetadata": "e598e676b70c22179e303f0d19b6b3e1dc9582e35203f9af23a7c0e097a2a7e1",
          "linkedWithoutMetadata": "e598e676b70c22179e303f0d19b6b3e1dc9582e35203f9af23a7c0e097a2a7e1"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "openOrderIdListLength()",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(bool,uint256,uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(bool,uint256,uint256,string,uint256,bytes)",
          "liquidation(bool,uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(bool,uint256,uint256,string,uint256,bytes)",
          "_isSolvent(uint256,uint256,uint256)",
          "adjustPosition(bool,uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4511",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4527",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4633_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:41"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:44"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:47"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:51"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:55"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4527": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4511": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4633_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4633_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "62ab6b8f0c3dde3ef98fcbeb942f6d6923b5acb2216f7682716edb9fcdc9fd39",
          "withoutMetadata": "8a7fe485131dd848fc53123a235eed90b13f8b9cf633f8a988628d5e40ca098d",
          "linkedWithoutMetadata": "8a7fe485131dd848fc53123a235eed90b13f8b9cf633f8a988628d5e40ca098d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(bool,uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "b7c228b4c876d8a4c4154a83382303c3b1c2390e980847b609353d1a470a7ce7",
          "withoutMetadata": "2b555ae8039a2df735aa6a13499f6b34c30944b3486fa54d9a9f8957345dc9e1",
          "linkedWithoutMetadata": "2b555ae8039a2df735aa6a13499f6b34c30944b3486fa54d9a9f8957345dc9e1"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)",
          "setOpenBuy(bool)",
          "setOpenSell(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            },
            {
              "label": "openBuy",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:26"
            },
            {
              "label": "openSell",
              "offset": 21,
              "slot": "104",
              "type": "t_bool",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "772d3185d4008497ea95e359913e1ccf02e44537c3a46e3a6ae5d54ba5c1c409",
          "withoutMetadata": "08360cf8082655191883a62487a3990eaa549861dd6004065966eee2aa6817bc",
          "linkedWithoutMetadata": "08360cf8082655191883a62487a3990eaa549861dd6004065966eee2aa6817bc"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(bool,uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:30",
        "version": {
          "withMetadata": "083f1cead199553509d9c697f22f310fb7ca846e75eef12cfc24bb8c3f8bb3e9",
          "withoutMetadata": "e598e676b70c22179e303f0d19b6b3e1dc9582e35203f9af23a7c0e097a2a7e1",
          "linkedWithoutMetadata": "e598e676b70c22179e303f0d19b6b3e1dc9582e35203f9af23a7c0e097a2a7e1"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "openOrderIdListLength()",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(bool,uint256,uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(bool,uint256,uint256,string,uint256,bytes)",
          "liquidation(bool,uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(bool,uint256,uint256,string,uint256,bytes)",
          "_isSolvent(uint256,uint256,uint256)",
          "adjustPosition(bool,uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4480",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4496",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4602_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:41"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:44"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:47"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:51"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:55"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4496": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4480": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4602_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4602_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "62ab6b8f0c3dde3ef98fcbeb942f6d6923b5acb2216f7682716edb9fcdc9fd39",
          "withoutMetadata": "8a7fe485131dd848fc53123a235eed90b13f8b9cf633f8a988628d5e40ca098d",
          "linkedWithoutMetadata": "8a7fe485131dd848fc53123a235eed90b13f8b9cf633f8a988628d5e40ca098d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(bool,uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "77139ef2c5df3c861e7aa4347204cec06afae419cad0f2b311d41bc6225d8111",
          "withoutMetadata": "54636f42740e54c1273366214b4d660bc0f611f4ab657222f046602574c20d84",
          "linkedWithoutMetadata": "54636f42740e54c1273366214b4d660bc0f611f4ab657222f046602574c20d84"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)",
          "setOpenBuy(bool)",
          "setOpenSell(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            },
            {
              "label": "openBuy",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:26"
            },
            {
              "label": "openSell",
              "offset": 21,
              "slot": "104",
              "type": "t_bool",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "978124ef51ba93396b72f09f3b7860084af76b8821b8002ba035782835a06d5d",
          "withoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891",
          "linkedWithoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "7cb4de36d0b57d9787e726c0247a161c0f4126835fe15a28a75adebe739bb0d2",
          "withoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4",
          "linkedWithoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4310",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4324",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4324": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4310": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4430_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "9c0f8d41080c38828f87cf197e12402f2ec448acbee9027f354bf61c50562d68",
          "withoutMetadata": "9de162d099154e4d31cbef7981d7a34a9c0b72b3510adb2d0f83acc57c92b2cf",
          "linkedWithoutMetadata": "9de162d099154e4d31cbef7981d7a34a9c0b72b3510adb2d0f83acc57c92b2cf"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "978124ef51ba93396b72f09f3b7860084af76b8821b8002ba035782835a06d5d",
          "withoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891",
          "linkedWithoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "7cb4de36d0b57d9787e726c0247a161c0f4126835fe15a28a75adebe739bb0d2",
          "withoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4",
          "linkedWithoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4310",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4324",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4324": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4310": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4430_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "462a51389f0615e729969afe1109694240d5d7cac96619a0d52368e24a564454",
          "withoutMetadata": "a42294e2d8474ac89411bcdb669f3df80e7b2fbd637abd59408ef80c6b6112ba",
          "linkedWithoutMetadata": "a42294e2d8474ac89411bcdb669f3df80e7b2fbd637abd59408ef80c6b6112ba"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "978124ef51ba93396b72f09f3b7860084af76b8821b8002ba035782835a06d5d",
          "withoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891",
          "linkedWithoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "7cb4de36d0b57d9787e726c0247a161c0f4126835fe15a28a75adebe739bb0d2",
          "withoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4",
          "linkedWithoutMetadata": "382c56fa82813eefef0fbbe4d05764d3276245893310e1df576b5017b66c75a4"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4310",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4324",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4324": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4310": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4430_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "978124ef51ba93396b72f09f3b7860084af76b8821b8002ba035782835a06d5d",
          "withoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891",
          "linkedWithoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "4db7f972c5b433a79468106f5800681e282cbf5484e5744339d7659a65e9d60f",
          "withoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e",
          "linkedWithoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4310",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4324",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4324": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4310": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4430_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "709eac747343b9410dcba013bdbf5ae3bda41f9cc0525f3294242d2f1cf2718f",
          "withoutMetadata": "ceaef01c4bb3c0589d4dac13bc3461ce8587f78dfa43d9e7a8c9aab8afc6036b",
          "linkedWithoutMetadata": "ceaef01c4bb3c0589d4dac13bc3461ce8587f78dfa43d9e7a8c9aab8afc6036b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "adjustFarm()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "4db7f972c5b433a79468106f5800681e282cbf5484e5744339d7659a65e9d60f",
          "withoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e",
          "linkedWithoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4319",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4333",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4439_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4333": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4319": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4439_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4439_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "978124ef51ba93396b72f09f3b7860084af76b8821b8002ba035782835a06d5d",
          "withoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891",
          "linkedWithoutMetadata": "7ecda51ad4891e5fbbb21fe63c7a68b1ffe5f37ba164480ab7dc0fd36996c891"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)",
          "setUSDCAddress(address)",
          "setFarm(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "4db7f972c5b433a79468106f5800681e282cbf5484e5744339d7659a65e9d60f",
          "withoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e",
          "linkedWithoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4310",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4324",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4324": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4310": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4430_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4430_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "1e8e6fd8fdecbaba61ddbf088d61612bbed236592280403fd172024db57464af",
          "withoutMetadata": "d38e9b293749011bb9ac12e123afd2b98b895852fca925141b1e03ca1e498d4c",
          "linkedWithoutMetadata": "d38e9b293749011bb9ac12e123afd2b98b895852fca925141b1e03ca1e498d4c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)",
          "setPid(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "4db7f972c5b433a79468106f5800681e282cbf5484e5744339d7659a65e9d60f",
          "withoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e",
          "linkedWithoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4272",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4286",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4392_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4286": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4272": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4392_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4392_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "972aa0926af445fc2ebf9f711d7e7b0711cc2b6073e90e906712bd75ccecbe15",
          "withoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547",
          "linkedWithoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "d56214b884fe367df7dcc9da00321132576cf1b5cd9cf5262ceaf786f4c7e58f",
          "withoutMetadata": "59e742dc0cb347ef6f8b1737803d1e336ff6df287ea556d29b5c401a717e2229",
          "linkedWithoutMetadata": "59e742dc0cb347ef6f8b1737803d1e336ff6df287ea556d29b5c401a717e2229"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setFeePercent(uint256)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4249",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4263",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4263": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4249": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4369_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "972aa0926af445fc2ebf9f711d7e7b0711cc2b6073e90e906712bd75ccecbe15",
          "withoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547",
          "linkedWithoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "9578e6bb74ccbbb1b3b8a61537b7f8e23ab3133427631f422166ecac7cec72a6",
          "withoutMetadata": "5763bd900c41bdc2e19966c7229401d4be492dc1398196c482be8674e2892907",
          "linkedWithoutMetadata": "5763bd900c41bdc2e19966c7229401d4be492dc1398196c482be8674e2892907"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4249",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4263",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4263": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4249": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4369_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "607fde6023d7c0319d12da4012368dc174e3b9fe1a21b9bdfdef4ad5c67a14e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "5ab219240a7a3a7f448c241f4825a0e83823250535f10fee8221dedddc7d7e9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "972aa0926af445fc2ebf9f711d7e7b0711cc2b6073e90e906712bd75ccecbe15",
          "withoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547",
          "linkedWithoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)3697",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)3697": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "4db7f972c5b433a79468106f5800681e282cbf5484e5744339d7659a65e9d60f",
          "withoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e",
          "linkedWithoutMetadata": "cd88198796cfe9a1d0aa1de76a68b26f2c42c08b0d08610eb855c7948d37149e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "myOpenOrderIdListLength(address)",
          "myCloseOrderIdListLength(address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)4249",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)4263",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)4263": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)4249": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)4369_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)4369_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/farm.sol:335",
        "version": {
          "withMetadata": "80a36e8ee724a29e68e37a61b2badfe66d780a72b8414294f3671329e98b8236",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm.sol:554"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FairLaunch": {
        "src": "contracts/farm.sol:791",
        "version": {
          "withMetadata": "aa6b49f2a56a2df9423da58544b4e4a0421fbabdaef8df205dcca963ccfdef90",
          "withoutMetadata": "e08dfcc0f228bf1803b78d9d91f0a898ba753af655957a2f2aff0792cb54c601",
          "linkedWithoutMetadata": "e08dfcc0f228bf1803b78d9d91f0a898ba753af655957a2f2aff0792cb54c601"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context",
          "IFairLaunch"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address,address,uint256,uint256,uint256)",
          "setExecutor(address,bool)",
          "setDev(address)",
          "setSeaPerBlock(uint256)",
          "setBonus(uint256,uint256)",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "isDuplicatedPool(address)",
          "poolLength()",
          "manualMint(address,uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingSea(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)",
          "emergencyWithdraw(uint256)",
          "getBlock()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FairLaunch",
            "src": "contracts/farm.sol:858"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:826"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:828"
            },
            {
              "label": "seaPerBlock",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:830"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:832"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:834"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(PoolInfo)1212_storage)dyn_storage",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:837"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1201_storage))",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:839"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:841"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:843"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:845"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)1212_storage)dyn_storage": {
              "label": "struct FairLaunch.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)1201_storage)": {
              "label": "mapping(address => struct FairLaunch.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1201_storage))": {
              "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)1212_storage": {
              "label": "struct FairLaunch.PoolInfo",
              "members": [
                {
                  "label": "stakeToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accSeaPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accSeaPerShareTilBonusEnd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)1201_storage": {
              "label": "struct FairLaunch.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bonusDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/farm.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFairLaunch": {
        "src": "contracts/farm.sol:747",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolLength()",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "pendingSea(uint256,address)",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISea": {
        "src": "contracts/farm.sol:786",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm.sol:719",
        "version": {
          "withMetadata": "5547fb7e4ab3d749996fc504c54628080737e13d36cc790d62413987e7085cb7",
          "withoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51",
          "linkedWithoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeERC20": {
        "src": "contracts/farm.sol:591",
        "version": {
          "withMetadata": "0675651ec41035bcae1409d23e5715cd8b188e0bd791b02dca766d63106bcf27",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm.sol:105",
        "version": {
          "withMetadata": "379c599a4852d346e68ca47a136be935ef0717636c2a8934c7b68015d1ac2b21",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/farm.sol:335",
        "version": {
          "withMetadata": "e9aa8dbc3cdf29bbc46cbe234104fd7197c62fd96ad95ae6565278028297615a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm.sol:554"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm.sol:105",
        "version": {
          "withMetadata": "018a6c4d93d4a92e1e0f9be064e638ae00e4d6da7e6cab53f7b0df8c09bf66ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FairLaunch": {
        "src": "contracts/farm.sol:791",
        "version": {
          "withMetadata": "fb4556035deb06ef1d9ff58a54a4bec738f8d45a28ded276f8d1e8e00603f082",
          "withoutMetadata": "462b5c94ac7bd8ef187204cd35e78e243be1a3db2cea6f0dd24a75c65568fb22",
          "linkedWithoutMetadata": "462b5c94ac7bd8ef187204cd35e78e243be1a3db2cea6f0dd24a75c65568fb22"
        },
        "inherit": [
          "ReentrancyGuard",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IFairLaunch"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256)",
          "setExecutor(address,bool)",
          "setDev(address)",
          "setSeaPerBlock(uint256)",
          "setBonus(uint256,uint256)",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "isDuplicatedPool(address)",
          "poolLength()",
          "manualMint(address,uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingSea(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)",
          "emergencyWithdraw(uint256)",
          "getBlock()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:826"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:828"
            },
            {
              "label": "seaPerBlock",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:830"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:832"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:834"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_struct(PoolInfo)4763_storage)dyn_storage",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:837"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:839"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:841"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:843"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:845"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)4763_storage)dyn_storage": {
              "label": "struct FairLaunch.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)4752_storage)": {
              "label": "mapping(address => struct FairLaunch.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))": {
              "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4763_storage": {
              "label": "struct FairLaunch.PoolInfo",
              "members": [
                {
                  "label": "stakeToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accSeaPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accSeaPerShareTilBonusEnd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)4752_storage": {
              "label": "struct FairLaunch.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bonusDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/farm.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFairLaunch": {
        "src": "contracts/farm.sol:747",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolLength()",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "pendingSea(uint256,address)",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISea": {
        "src": "contracts/farm.sol:786",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm.sol:719",
        "version": {
          "withMetadata": "23dcff3a6cbf85436980801aeea66938bb4222f808ccb80a4858b8150603f7e1",
          "withoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51",
          "linkedWithoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeERC20": {
        "src": "contracts/farm.sol:591",
        "version": {
          "withMetadata": "ec1b533e245f1452af35918512719e64c94224cf7fb79bcca40bb95882f8c52e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "972aa0926af445fc2ebf9f711d7e7b0711cc2b6073e90e906712bd75ccecbe15",
          "withoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547",
          "linkedWithoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)6127",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)6127": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "cecf243909d23bd818c135cc9b4d23ce98177206f61be4de6ffcf5f075d724c6",
          "withoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752",
          "linkedWithoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)6679",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)6693",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)6799_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)6693": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)6679": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)6799_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)6799_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "7759ce935c84dd05ea6e7e1f1717ed6db3816350cc4e589f29ee781a626dcd04",
          "withoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2",
          "linkedWithoutMetadata": "ada43d4f298c90ed323f1eff62eab5c51c3249e2666ac6eb911af47cf83ce5b2"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/farm.sol:335",
        "version": {
          "withMetadata": "e9aa8dbc3cdf29bbc46cbe234104fd7197c62fd96ad95ae6565278028297615a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm.sol:554"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm.sol:105",
        "version": {
          "withMetadata": "018a6c4d93d4a92e1e0f9be064e638ae00e4d6da7e6cab53f7b0df8c09bf66ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FairLaunch": {
        "src": "contracts/farm.sol:791",
        "version": {
          "withMetadata": "fb4556035deb06ef1d9ff58a54a4bec738f8d45a28ded276f8d1e8e00603f082",
          "withoutMetadata": "462b5c94ac7bd8ef187204cd35e78e243be1a3db2cea6f0dd24a75c65568fb22",
          "linkedWithoutMetadata": "462b5c94ac7bd8ef187204cd35e78e243be1a3db2cea6f0dd24a75c65568fb22"
        },
        "inherit": [
          "ReentrancyGuard",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IFairLaunch"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256)",
          "setExecutor(address,bool)",
          "setDev(address)",
          "setSeaPerBlock(uint256)",
          "setBonus(uint256,uint256)",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "isDuplicatedPool(address)",
          "poolLength()",
          "manualMint(address,uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingSea(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)",
          "emergencyWithdraw(uint256)",
          "getBlock()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:826"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:828"
            },
            {
              "label": "seaPerBlock",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:830"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:832"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:834"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_struct(PoolInfo)4763_storage)dyn_storage",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:837"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:839"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:841"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:843"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:845"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)4763_storage)dyn_storage": {
              "label": "struct FairLaunch.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)4752_storage)": {
              "label": "mapping(address => struct FairLaunch.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))": {
              "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4763_storage": {
              "label": "struct FairLaunch.PoolInfo",
              "members": [
                {
                  "label": "stakeToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accSeaPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accSeaPerShareTilBonusEnd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)4752_storage": {
              "label": "struct FairLaunch.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bonusDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/farm.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFairLaunch": {
        "src": "contracts/farm.sol:747",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolLength()",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "pendingSea(uint256,address)",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISea": {
        "src": "contracts/farm.sol:786",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm.sol:719",
        "version": {
          "withMetadata": "23dcff3a6cbf85436980801aeea66938bb4222f808ccb80a4858b8150603f7e1",
          "withoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51",
          "linkedWithoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeERC20": {
        "src": "contracts/farm.sol:591",
        "version": {
          "withMetadata": "ec1b533e245f1452af35918512719e64c94224cf7fb79bcca40bb95882f8c52e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "972aa0926af445fc2ebf9f711d7e7b0711cc2b6073e90e906712bd75ccecbe15",
          "withoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547",
          "linkedWithoutMetadata": "d33539e599894f230a29f7415f861671b020aa8db50f82ddff38066dbd01f547"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)6127",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)6127": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "cecf243909d23bd818c135cc9b4d23ce98177206f61be4de6ffcf5f075d724c6",
          "withoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752",
          "linkedWithoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)6679",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)6693",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)6799_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)6693": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)6679": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)6799_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)6799_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "f01170653823cf1800bb8abd0e7c7b199c9d0162ad30a83fd8fdd7a94cb4b571",
          "withoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48",
          "linkedWithoutMetadata": "85eab27085a3da6cd00c68590a5dcf8bdc8e82c93bb045f1b26dc722d052ca48"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "de9b08ebd5bcfdc05553e098c6bdc30622a19faf611fb43bac53fabb29b12213",
          "withoutMetadata": "5e1ddea88aaed5673c2dbcf19add006d22054f7206f283ea22948ebebaf7dd4b",
          "linkedWithoutMetadata": "5e1ddea88aaed5673c2dbcf19add006d22054f7206f283ea22948ebebaf7dd4b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts/uniswap/PancakeRouter.sol:585",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/uniswap/PancakeRouter.sol:281",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "INIT_CODE_PAIR_HASH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/uniswap/PancakeRouter.sol:337",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts/uniswap/PancakeRouter.sol:67",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts/uniswap/PancakeRouter.sol:230",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/uniswap/PancakeRouter.sol:619",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeLibrary": {
        "src": "contracts/uniswap/PancakeRouter.sol:444",
        "version": {
          "withMetadata": "e6e3ec68d3646d993087d68556feb6b3b6b8ef52946b6047b934eb6798bcdef8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeRouter": {
        "src": "contracts/uniswap/PancakeRouter.sol:631",
        "version": {
          "withMetadata": "954f7d188463ced290d1b324763340d15833077adc1f2740ce50b1dd4c39092b",
          "withoutMetadata": "6a9f3b28ecca6de9c4e1f0e743ad343c7e98b1103e5b156aab148636ded256c7",
          "linkedWithoutMetadata": "6a9f3b28ecca6de9c4e1f0e743ad343c7e98b1103e5b156aab148636ded256c7"
        },
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [
          "SafeMath",
          "PancakeLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address,address)",
          "()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeRouter",
            "src": "contracts/uniswap/PancakeRouter.sol:642"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/uniswap/PancakeRouter.sol:634"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/uniswap/PancakeRouter.sol:635"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/uniswap/PancakeRouter.sol:319",
        "version": {
          "withMetadata": "e4196ad7907c549071119abd11b116ddd546d24c316ec19ea933fb4753800d4c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts/uniswap/PancakeRouter.sol:10",
        "version": {
          "withMetadata": "cc426922c8a7b196741bfab7ee23303940719337a5162ce53a7e9a103c31e766",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "WAVAX": {
        "src": "contracts/uniswap/wavax.sol:24",
        "version": {
          "withMetadata": "c0d0f48bcd36c0ae396ce9e57b8c2964e0a351657d1d37a25a18144887507494",
          "withoutMetadata": "c2b81ddf819c9b2b766988f8405e9e4aa9345e7a04ae37b6c1e68d3e4b2e432a",
          "linkedWithoutMetadata": "c2b81ddf819c9b2b766988f8405e9e4aa9345e7a04ae37b6c1e68d3e4b2e432a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/uniswap/wavax.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/uniswap/wavax.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/uniswap/wavax.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WAVAX",
              "src": "contracts/uniswap/wavax.sol:25"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WAVAX",
              "src": "contracts/uniswap/wavax.sol:26"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WAVAX",
              "src": "contracts/uniswap/wavax.sol:27"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WAVAX",
              "src": "contracts/uniswap/wavax.sol:34"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WAVAX",
              "src": "contracts/uniswap/wavax.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts/uniswap/PancakeFactory.sol:380",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeCallee": {
        "src": "contracts/uniswap/PancakeFactory.sol:414",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pancakeCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeERC20": {
        "src": "contracts/uniswap/PancakeFactory.sol:146",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/uniswap/PancakeFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/uniswap/PancakeFactory.sol:37",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/uniswap/PancakeFactory.sol:343",
        "version": {
          "withMetadata": "276beaf75430ed0a4f063456c3060749d16634b46fbfffcdfc49acf4b5be2cb6",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeERC20": {
        "src": "contracts/uniswap/PancakeFactory.sol:211",
        "version": {
          "withMetadata": "34920b6262211409ed3d4bc87d9e54be1224f71669b55a1f5e80cb37fd660949",
          "withoutMetadata": "34920b6262211409ed3d4bc87d9e54be1224f71669b55a1f5e80cb37fd660949",
          "linkedWithoutMetadata": "34920b6262211409ed3d4bc87d9e54be1224f71669b55a1f5e80cb37fd660949"
        },
        "inherit": [
          "IPancakeERC20"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeERC20",
            "src": "contracts/uniswap/PancakeFactory.sol:234"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:217"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:218"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:219"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:221"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:225"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakeFactory": {
        "src": "contracts/uniswap/PancakeFactory.sol:706",
        "version": {
          "withMetadata": "b394ad4a292f9f329d26cf83d04350016a907e27398aa6846933f97987c0d160",
          "withoutMetadata": "c367b3214cbd2c3d24b4780958f844862c8b06a28929fca64ede7216699dc621",
          "linkedWithoutMetadata": "c367b3214cbd2c3d24b4780958f844862c8b06a28929fca64ede7216699dc621"
        },
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeFactory",
            "src": "contracts/uniswap/PancakeFactory.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/uniswap/PancakeFactory.sol:710"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/uniswap/PancakeFactory.sol:711"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "PancakeFactory",
              "src": "contracts/uniswap/PancakeFactory.sol:713"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PancakeFactory",
              "src": "contracts/uniswap/PancakeFactory.sol:714"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakePair": {
        "src": "contracts/uniswap/PancakeFactory.sol:423",
        "version": {
          "withMetadata": "0622bcf87b3d05bbc24d0717aba2b204601d3dab6e2a8c0f5e273254a80e9322",
          "withoutMetadata": "0622bcf87b3d05bbc24d0717aba2b204601d3dab6e2a8c0f5e273254a80e9322",
          "linkedWithoutMetadata": "0622bcf87b3d05bbc24d0717aba2b204601d3dab6e2a8c0f5e273254a80e9322"
        },
        "inherit": [
          "PancakeERC20",
          "IPancakeERC20",
          "IPancakePair"
        ],
        "libraries": [
          "SafeMath",
          "UQ112x112",
          "Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakePair",
            "src": "contracts/uniswap/PancakeFactory.sol:496"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts/uniswap/PancakeFactory.sol:443"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:217"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:218"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:219"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:221"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/uniswap/PancakeFactory.sol:225"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:431"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:432"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:433"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:435"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:436"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:437"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:439"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:440"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:441"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/uniswap/PancakeFactory.sol:443"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts/uniswap/PancakeFactory.sol:197",
        "version": {
          "withMetadata": "bc5787bc6ddd2ce7ee436cebca7903417a4294406c921cd618cb1a1ab6b79e5c",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts/uniswap/PancakeFactory.sol:366",
        "version": {
          "withMetadata": "c1440b6ef8d90e99f63d87d35fc998177bfa22e856d06c978c1612a98f49c683",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/farm.sol:335",
        "version": {
          "withMetadata": "b7f2a83e5fc8c6c3fda62f20ef1911f4fcc807a01463b20f403a1fc7bc98fe2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm.sol:554"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm.sol:105",
        "version": {
          "withMetadata": "c9a4056cc65899e695a7084f61111613bb0672bbed89919121f6a606f9f3eec0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FairLaunch": {
        "src": "contracts/farm.sol:791",
        "version": {
          "withMetadata": "9631578bd080a2b65081d7823b7b3ddda5e859cda02c044d02ebe718757076ca",
          "withoutMetadata": "1ca750753dc81a321ebc537384219d558a461bbe6a6a9516b85dfa6552352c99",
          "linkedWithoutMetadata": "1ca750753dc81a321ebc537384219d558a461bbe6a6a9516b85dfa6552352c99"
        },
        "inherit": [
          "ReentrancyGuard",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IFairLaunch"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address,address,uint256,uint256,uint256)",
          "setExecutor(address,bool)",
          "setDev(address)",
          "setSeaPerBlock(uint256)",
          "setBonus(uint256,uint256)",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "isDuplicatedPool(address)",
          "poolLength()",
          "manualMint(address,uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingSea(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)",
          "emergencyWithdraw(uint256)",
          "getBlock()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FairLaunch",
            "src": "contracts/farm.sol:858"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:826"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:828"
            },
            {
              "label": "seaPerBlock",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:830"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:832"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:834"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_struct(PoolInfo)4763_storage)dyn_storage",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:837"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:839"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:841"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:843"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:845"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)4763_storage)dyn_storage": {
              "label": "struct FairLaunch.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)4752_storage)": {
              "label": "mapping(address => struct FairLaunch.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))": {
              "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4763_storage": {
              "label": "struct FairLaunch.PoolInfo",
              "members": [
                {
                  "label": "stakeToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accSeaPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accSeaPerShareTilBonusEnd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)4752_storage": {
              "label": "struct FairLaunch.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bonusDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/farm.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFairLaunch": {
        "src": "contracts/farm.sol:747",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolLength()",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "pendingSea(uint256,address)",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISea": {
        "src": "contracts/farm.sol:786",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm.sol:719",
        "version": {
          "withMetadata": "74ac96a08756ae60137895dd5e7fa206322d13e0a601b644930b3d1d3b1d99df",
          "withoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51",
          "linkedWithoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeERC20": {
        "src": "contracts/farm.sol:591",
        "version": {
          "withMetadata": "73978f6b0d5124bf6c5041f29343b4673fa99758693c6850a87d874954dc5723",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "44721c4d64ab9193dd4c0b1b9cbe2d20f5e151e2973d11c0ad3366ed542a0b0e",
          "withoutMetadata": "2dc1596deebc4bbe0ce2532087bb9b1e8a2e3ad7013d0bb2294f55ec9cc10ad1",
          "linkedWithoutMetadata": "2dc1596deebc4bbe0ce2532087bb9b1e8a2e3ad7013d0bb2294f55ec9cc10ad1"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)6122",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)6122": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/stabilizer.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "cecf243909d23bd818c135cc9b4d23ce98177206f61be4de6ffcf5f075d724c6",
          "withoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752",
          "linkedWithoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)6688",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)6702",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)6808_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)6702": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)6688": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)6808_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)6808_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "794c3e9d0b49a64f430cf185f61233e87ce9064383a82de8782513ce78d37959",
          "withoutMetadata": "bc31e24f8d77c57c10f923c3c0c5a6c2b52208b0d78472934b9de1a9ea6b0bd8",
          "linkedWithoutMetadata": "bc31e24f8d77c57c10f923c3c0c5a6c2b52208b0d78472934b9de1a9ea6b0bd8"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "()",
          "initialize()",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts/oracle.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:16",
        "version": {
          "withMetadata": "de9b08ebd5bcfdc05553e098c6bdc30622a19faf611fb43bac53fabb29b12213",
          "withoutMetadata": "5e1ddea88aaed5673c2dbcf19add006d22054f7206f283ea22948ebebaf7dd4b",
          "linkedWithoutMetadata": "5e1ddea88aaed5673c2dbcf19add006d22054f7206f283ea22948ebebaf7dd4b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "goStabilizer()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:21"
            },
            {
              "label": "usdc_usc_lpAddress",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:22"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:23"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "35589127d3bd9e9fe962c8006fa18748aea58d45486d9ef2fbab76eb94f5b6ca",
          "withoutMetadata": "1faaefc5061a6caf779a8150fe4682c8c4465c3e1ce728c5402943a4d7d0bed7",
          "linkedWithoutMetadata": "1faaefc5061a6caf779a8150fe4682c8c4465c3e1ce728c5402943a4d7d0bed7"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "996ee95678b74f1799b4e4e73b8959f98ee32402d0f0e8a7e1dabd17313e809a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d8138e3ea0b83d23e4b62d81a9a9fec6523d2eb95d7493eb9dd870cfd1eae8b3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "f9a2712642b06683ddcacf454f765843453406d634c7e92343fd65e02547cee5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "4a8841f710b844449d698f883963c5b2821e2d3ac13f3c77bb6e8ae8ec0a96dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "43310be9d07ca3ed16d3422e80193d0cb95ff1165d0bbfa84d07256e247cfa08",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "1634c1a59ae6cc671422d50bc31e84314ee3aef3365c7228442b0124f7d83f87",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "fb38645dd1cf103cc458b19a2cbbc5edbdbba1ebd599d762ae9c7665ba1f3710",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "3054cd2f2d890237421fa88a6e1cf77bd8fb396f6670601a795d219b5a354e23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "73ff4e490c37ac8d49225a1b8390a1678feb59e97e0f1e3aef417f6507f875a9",
          "withoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec",
          "linkedWithoutMetadata": "05982cfa77d3ded9372d412b844973999856486a09fb5ca0e4f77d11a8ed23ec"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "8e68ca8af3063a90225b96dc9fbd7db6f1f4e12e6f082b050d4d019af181b772",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "2204d8bcf632fca168a778d8bced8718c4581cc9cb5f5fdb357a724e98d9d164",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "d49461c6803990a70ff425b43e94a5831ab412b78006f27aae6f2b894081f186",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "contracts/farm.sol:335",
        "version": {
          "withMetadata": "b7f2a83e5fc8c6c3fda62f20ef1911f4fcc807a01463b20f403a1fc7bc98fe2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/farm.sol:554"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "501c8b83a77919af215d2f99b67ce94a34331bf52b104a178114d6137a2a7ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "ce1811c896dd035bcb4949b0d9f08784fd9374555d32b9160e9aad374383554b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureChecker": {
        "src": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:20",
        "version": {
          "withMetadata": "4b025a0795f808a450181800220895bb73f716d5ecb10a845310ddb7b4eefaaf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/farm.sol:105",
        "version": {
          "withMetadata": "c9a4056cc65899e695a7084f61111613bb0672bbed89919121f6a606f9f3eec0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol:7",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FairLaunch": {
        "src": "contracts/farm.sol:791",
        "version": {
          "withMetadata": "9631578bd080a2b65081d7823b7b3ddda5e859cda02c044d02ebe718757076ca",
          "withoutMetadata": "1ca750753dc81a321ebc537384219d558a461bbe6a6a9516b85dfa6552352c99",
          "linkedWithoutMetadata": "1ca750753dc81a321ebc537384219d558a461bbe6a6a9516b85dfa6552352c99"
        },
        "inherit": [
          "ReentrancyGuard",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IFairLaunch"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address,address,uint256,uint256,uint256)",
          "setExecutor(address,bool)",
          "setDev(address)",
          "setSeaPerBlock(uint256)",
          "setBonus(uint256,uint256)",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "isDuplicatedPool(address)",
          "poolLength()",
          "manualMint(address,uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingSea(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)",
          "emergencyWithdraw(uint256)",
          "getBlock()",
          "withdrawalERC20(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FairLaunch",
            "src": "contracts/farm.sol:858"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:826"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:828"
            },
            {
              "label": "seaPerBlock",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:830"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:832"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:834"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_struct(PoolInfo)4763_storage)dyn_storage",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:837"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:839"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:841"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:843"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FairLaunch",
              "src": "contracts/farm.sol:845"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)4763_storage)dyn_storage": {
              "label": "struct FairLaunch.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)4752_storage)": {
              "label": "mapping(address => struct FairLaunch.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4752_storage))": {
              "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4763_storage": {
              "label": "struct FairLaunch.PoolInfo",
              "members": [
                {
                  "label": "stakeToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accSeaPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accSeaPerShareTilBonusEnd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)4752_storage": {
              "label": "struct FairLaunch.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bonusDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/farm.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFairLaunch": {
        "src": "contracts/farm.sol:747",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolLength()",
          "addPool(uint256,address,bool)",
          "setPool(uint256,uint256,bool)",
          "pendingSea(uint256,address)",
          "updatePool(uint256)",
          "deposit(address,uint256,uint256)",
          "withdraw(address,uint256,uint256)",
          "withdrawAll(address,uint256)",
          "harvest(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISea": {
        "src": "contracts/farm.sol:786",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/farm.sol:719",
        "version": {
          "withMetadata": "74ac96a08756ae60137895dd5e7fa206322d13e0a601b644930b3d1d3b1d99df",
          "withoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51",
          "linkedWithoutMetadata": "926d2a4e814fbc082f8e55ec72409070f261c9efb73666c760d0689425b6fa51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/farm.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/farm.sol:721"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeERC20": {
        "src": "contracts/farm.sol:591",
        "version": {
          "withMetadata": "73978f6b0d5124bf6c5041f29343b4673fa99758693c6850a87d874954dc5723",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFarm": {
        "src": "contracts/helperLogic.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPool(uint256,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStabilizer": {
        "src": "contracts/helperLogic.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "helperLogic": {
        "src": "contracts/helperLogic.sol:25",
        "version": {
          "withMetadata": "44721c4d64ab9193dd4c0b1b9cbe2d20f5e151e2973d11c0ad3366ed542a0b0e",
          "withoutMetadata": "2dc1596deebc4bbe0ce2532087bb9b1e8a2e3ad7013d0bb2294f55ec9cc10ad1",
          "linkedWithoutMetadata": "2dc1596deebc4bbe0ce2532087bb9b1e8a2e3ad7013d0bb2294f55ec9cc10ad1"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address,address)",
          "setExecutor(address,bool)",
          "jointExecution()",
          "withdrawalERC20(address,uint256)",
          "setOp(address)",
          "setDev(address)",
          "setToSseaPercent(uint256)",
          "setToOpPercent(uint256)",
          "setToDevPercent(uint256)",
          "setAutoAdjustFarm(bool)",
          "setOpenStabilizer(bool)",
          "setStabilizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:30"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:32"
            },
            {
              "label": "sea",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:33"
            },
            {
              "label": "ssea",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:34"
            },
            {
              "label": "op",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:35"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:36"
            },
            {
              "label": "Router",
              "offset": 0,
              "slot": "108",
              "type": "t_contract(IUniswapV2Router02)3677",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:38"
            },
            {
              "label": "Factory",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(IUniswapV2Factory)3039",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:39"
            },
            {
              "label": "toSseaPercent",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:41"
            },
            {
              "label": "toOpPercent",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:42"
            },
            {
              "label": "toDevPercent",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:43"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "113",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:44"
            },
            {
              "label": "basePoint",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:46"
            },
            {
              "label": "pid",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:47"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "116",
              "type": "t_contract(IFarm)6122",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:49"
            },
            {
              "label": "autoAdjustFarm",
              "offset": 20,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:51"
            },
            {
              "label": "openStabilizer",
              "offset": 21,
              "slot": "116",
              "type": "t_bool",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:52"
            },
            {
              "label": "stabilizer",
              "offset": 0,
              "slot": "117",
              "type": "t_address",
              "contract": "helperLogic",
              "src": "contracts/helperLogic.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IFarm)6122": {
              "label": "contract IFarm",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)3039": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3677": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOracle": {
        "src": "contracts/mirrorseaMain.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUSC": {
        "src": "contracts/mirrorseaMain.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IhelperLogic": {
        "src": "contracts/mirrorseaMain.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jointExecution()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "mirrorseaMain": {
        "src": "contracts/mirrorseaMain.sol:29",
        "version": {
          "withMetadata": "cecf243909d23bd818c135cc9b4d23ce98177206f61be4de6ffcf5f075d724c6",
          "withoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752",
          "linkedWithoutMetadata": "a493090282a925b05accd55dcb2b085b46dd4fb0bc945e786f7b46e12ab8d752"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address,address,address)",
          "setExecutor(address,bool)",
          "setSigner(address)",
          "orderInfo(uint256)",
          "setOrderInfo(uint256,address,uint256,string,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "pagination(address,uint256,uint256,uint256)",
          "openPosition(uint256,uint256,uint256,string,uint256,uint256,bytes)",
          "closePosition(uint256,uint256,string,uint256,bytes)",
          "liquidation(uint256[],uint256[],string[],uint256[],bytes[])",
          "forcedLiquidation(uint256,uint256,string,uint256,bytes)",
          "adjustPosition(uint256,uint256,string,uint256,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:34"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:35"
            },
            {
              "label": "usc",
              "offset": 0,
              "slot": "103",
              "type": "t_contract(IERC20Upgradeable)821",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:36"
            },
            {
              "label": "helperLogic",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IhelperLogic)6688",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:37"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IOracle)6702",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:38"
            },
            {
              "label": "_orderInfo",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_uint256,t_struct(OrderInfo)6808_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:39"
            },
            {
              "label": "OrderIndex",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:40"
            },
            {
              "label": "openOrderIdList",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:42"
            },
            {
              "label": "openOrderIdList_index",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:43"
            },
            {
              "label": "myOpenOrderIdList",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:45"
            },
            {
              "label": "myOpenOrderIdList_index",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:46"
            },
            {
              "label": "myCloseOrderIdList",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:49"
            },
            {
              "label": "myCloseOrderIdList_index",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:50"
            },
            {
              "label": "feePercent",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:53"
            },
            {
              "label": "PRECISION",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:54"
            },
            {
              "label": "minVal",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "mirrorseaMain",
              "src": "contracts/mirrorseaMain.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)821": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)6702": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IhelperLogic)6688": {
              "label": "contract IhelperLogic",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OrderInfo)6808_storage)": {
              "label": "mapping(uint256 => struct mirrorseaMain.OrderInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OrderInfo)6808_storage": {
              "label": "struct mirrorseaMain.OrderInfo",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_type",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbols",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "state",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "direction",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "openTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "closePrice18",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "closeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "margin",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts/oracle.sol:10",
        "version": {
          "withMetadata": "794c3e9d0b49a64f430cf185f61233e87ce9064383a82de8782513ce78d37959",
          "withoutMetadata": "bc31e24f8d77c57c10f923c3c0c5a6c2b52208b0d78472934b9de1a9ea6b0bd8",
          "linkedWithoutMetadata": "bc31e24f8d77c57c10f923c3c0c5a6c2b52208b0d78472934b9de1a9ea6b0bd8"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "ECDSA"
        ],
        "methods": [
          "()",
          "initialize()",
          "setExecutor(address,bool)",
          "setTimeLimit(uint256)",
          "setSigner(address)",
          "getkey(uint256,uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts/oracle.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "signer",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:14"
            },
            {
              "label": "timeLimit",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:15"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Oracle",
              "src": "contracts/oracle.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "seaERC20": {
        "src": "contracts/seaERC20.sol:11",
        "version": {
          "withMetadata": "c23a213f107c68ff7bc0f2e4dcd1482f9eeeafb5a40f842ebfbfb07e1055d18b",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "seaERC20",
              "src": "contracts/seaERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "stabilizer": {
        "src": "contracts/stabilizer.sol:9",
        "version": {
          "withMetadata": "130d15f4ddaed7ade070f778e0f7c410e2cf4c8686ae6aa2ac787556add9f354",
          "withoutMetadata": "83837a38cbc0b06286f16355455aa1baed7c159bf2293c98c562329ac4da6c61",
          "linkedWithoutMetadata": "83837a38cbc0b06286f16355455aa1baed7c159bf2293c98c562329ac4da6c61"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "setExecutor(address,bool)",
          "goStabilizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "stabilizer",
              "src": "contracts/stabilizer.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "uscERC20": {
        "src": "contracts/uscERC20.sol:11",
        "version": {
          "withMetadata": "c995013182e23c32068010fcf71428c7aaf29a2d5c90b294856a5365dd843ec0",
          "withoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1",
          "linkedWithoutMetadata": "b4e42c905113e9fe280803766da02c3bf426dfcea45fd2fa0b685b4f24cdb0c1"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(string,string,address,uint256)",
          "setExecutor(address,bool)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnToAdmin(address,uint256)",
          "burnFrom(address,uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:10"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:15"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "106",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
            },
            {
              "label": "executor",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "uscERC20",
              "src": "contracts/uscERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "BaseBoringBatchable": {
        "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:12",
        "version": {
          "withMetadata": "d2bcf6f827c41c539e8f1b673bbe45415f1303ff2bf7d5797aec292a4e6645f9",
          "withoutMetadata": "27ce25ce9062a3ecdce36235ec440e483c67f55e1401714f41a7305b2616d40a",
          "linkedWithoutMetadata": "27ce25ce9062a3ecdce36235ec440e483c67f55e1401714f41a7305b2616d40a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "batch(bytes[],bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringBatchable": {
        "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:43",
        "version": {
          "withMetadata": "d6b71f9b10e4a534e286cb9790d24ce3e7b5291f65e0f8512e02cfca89b3c09d",
          "withoutMetadata": "ccd16ec7b2169a271623d240460d627990df4292239d5dbdc98445d0db100320",
          "linkedWithoutMetadata": "ccd16ec7b2169a271623d240460d627990df4292239d5dbdc98445d0db100320"
        },
        "inherit": [
          "BaseBoringBatchable"
        ],
        "libraries": [],
        "methods": [
          "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Domain": {
        "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:9",
        "version": {
          "withMetadata": "771f38853c1b37943a63a32face6db321ad16472c3e42378610230d8b89c2cd1",
          "withoutMetadata": "48e9aa803e68e8176c39346c05b7ea5e2d0432471443f669f89cb3f43d304fa7",
          "linkedWithoutMetadata": "48e9aa803e68e8176c39346c05b7ea5e2d0432471443f669f89cb3f43d304fa7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Domain",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_DOMAIN_SEPARATOR",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DOMAIN_SEPARATOR_CHAIN_ID",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:19",
        "inherit": [
          "Domain",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "DOMAIN_SEPARATOR()",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:21"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:23"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Data": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:10",
        "version": {
          "withMetadata": "80540904705699ae2fd1545c8d5e01f95a006a1acc94b01fca721c340b774c42",
          "withoutMetadata": "739e076fb88c3194bb3711563835526a2892a17b9bc7168af6b3eb099419ebad",
          "linkedWithoutMetadata": "739e076fb88c3194bb3711563835526a2892a17b9bc7168af6b3eb099419ebad"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:14"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20WithSupply": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:126",
        "version": {
          "withMetadata": "435e6d40bf13c26db767fdf2d9b9d963249fd04d19889f056d74c0a0efa3b514",
          "withoutMetadata": "4f366a0a9a4521dda242f026426588aa3878ef0aa6cea204794419389a483d54",
          "linkedWithoutMetadata": "4f366a0a9a4521dda242f026426588aa3878ef0aa6cea204794419389a483d54"
        },
        "inherit": [
          "ERC20",
          "Domain",
          "IERC20"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:21"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:23"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:25"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20WithSupply",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:127"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol:7",
        "version": {
          "withMetadata": "5ef44333d6adb639508a7c670b010e05ef6eeffae0f3395ec045f88c6eb192c1",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:6",
        "version": {
          "withMetadata": "231864631021786e24f76ce497b80dfb9f1c7f100b6bf0bf0c6a405580a71a80",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath128": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:36",
        "version": {
          "withMetadata": "14e58e7f2c0a271301a991b7271ae26b279f6915fa89bc29a977632440acb95e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath32": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:58",
        "version": {
          "withMetadata": "1e2d452496e2ce0cdc2a1740ab873a20037c2aa3a75749b1310307ce1ed0c606",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath64": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:47",
        "version": {
          "withMetadata": "91b4a994ce247e33f995d2b5b1dd30bd4b7155d11d3c0ad169a953893bfee109",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sSeaERC20": {
        "src": "contracts/sseaERC20.sol:14",
        "version": {
          "withMetadata": "56d9b77f371fa091cb4c6ac48ab654c8845359659c2e1003012dfc86948f6a67",
          "withoutMetadata": "39ff28111de50d1b93f4c821ec699beeb09fc1b72df207e7567fcdd1c26d9023",
          "linkedWithoutMetadata": "39ff28111de50d1b93f4c821ec699beeb09fc1b72df207e7567fcdd1c26d9023"
        },
        "inherit": [
          "Domain",
          "IERC20"
        ],
        "libraries": [
          "BoringMath",
          "BoringMath128",
          "BoringERC20"
        ],
        "methods": [
          "(address)",
          "owner()",
          "transferOwnership(address)",
          "setLOCK_TIME(uint256)",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "DOMAIN_SEPARATOR()",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "mint(uint256)",
          "burn(address,uint256)",
          "burnFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sSeaERC20",
            "src": "contracts/sseaERC20.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LOCK_TIME",
            "src": "contracts/sseaERC20.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/sseaERC20.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:22"
            },
            {
              "label": "LOCK_TIME",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:24"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(User)1358_storage)",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:38"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:40"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)1358_storage)": {
              "label": "mapping(address => struct sSeaERC20.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)1358_storage": {
              "label": "struct sSeaERC20.User",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockedUntil",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "BaseBoringBatchable": {
        "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:12",
        "version": {
          "withMetadata": "d2bcf6f827c41c539e8f1b673bbe45415f1303ff2bf7d5797aec292a4e6645f9",
          "withoutMetadata": "27ce25ce9062a3ecdce36235ec440e483c67f55e1401714f41a7305b2616d40a",
          "linkedWithoutMetadata": "27ce25ce9062a3ecdce36235ec440e483c67f55e1401714f41a7305b2616d40a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "batch(bytes[],bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringBatchable": {
        "src": "@boringcrypto/boring-solidity/contracts/BoringBatchable.sol:43",
        "version": {
          "withMetadata": "d6b71f9b10e4a534e286cb9790d24ce3e7b5291f65e0f8512e02cfca89b3c09d",
          "withoutMetadata": "ccd16ec7b2169a271623d240460d627990df4292239d5dbdc98445d0db100320",
          "linkedWithoutMetadata": "ccd16ec7b2169a271623d240460d627990df4292239d5dbdc98445d0db100320"
        },
        "inherit": [
          "BaseBoringBatchable"
        ],
        "libraries": [],
        "methods": [
          "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Domain": {
        "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:9",
        "version": {
          "withMetadata": "771f38853c1b37943a63a32face6db321ad16472c3e42378610230d8b89c2cd1",
          "withoutMetadata": "48e9aa803e68e8176c39346c05b7ea5e2d0432471443f669f89cb3f43d304fa7",
          "linkedWithoutMetadata": "48e9aa803e68e8176c39346c05b7ea5e2d0432471443f669f89cb3f43d304fa7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Domain",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_DOMAIN_SEPARATOR",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DOMAIN_SEPARATOR_CHAIN_ID",
            "src": "@boringcrypto/boring-solidity/contracts/Domain.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:19",
        "inherit": [
          "Domain",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "DOMAIN_SEPARATOR()",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:21"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:23"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Data": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:10",
        "version": {
          "withMetadata": "80540904705699ae2fd1545c8d5e01f95a006a1acc94b01fca721c340b774c42",
          "withoutMetadata": "739e076fb88c3194bb3711563835526a2892a17b9bc7168af6b3eb099419ebad",
          "linkedWithoutMetadata": "739e076fb88c3194bb3711563835526a2892a17b9bc7168af6b3eb099419ebad"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:14"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Data",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20WithSupply": {
        "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:126",
        "version": {
          "withMetadata": "435e6d40bf13c26db767fdf2d9b9d963249fd04d19889f056d74c0a0efa3b514",
          "withoutMetadata": "4f366a0a9a4521dda242f026426588aa3878ef0aa6cea204794419389a483d54",
          "linkedWithoutMetadata": "4f366a0a9a4521dda242f026426588aa3878ef0aa6cea204794419389a483d54"
        },
        "inherit": [
          "ERC20",
          "Domain",
          "IERC20"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:21"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:23"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:25"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20WithSupply",
              "src": "@boringcrypto/boring-solidity/contracts/ERC20.sol:127"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringERC20": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol:7",
        "version": {
          "withMetadata": "5ef44333d6adb639508a7c670b010e05ef6eeffae0f3395ec045f88c6eb192c1",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:6",
        "version": {
          "withMetadata": "231864631021786e24f76ce497b80dfb9f1c7f100b6bf0bf0c6a405580a71a80",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath128": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:36",
        "version": {
          "withMetadata": "14e58e7f2c0a271301a991b7271ae26b279f6915fa89bc29a977632440acb95e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath32": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:58",
        "version": {
          "withMetadata": "1e2d452496e2ce0cdc2a1740ab873a20037c2aa3a75749b1310307ce1ed0c606",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BoringMath64": {
        "src": "@boringcrypto/boring-solidity/contracts/libraries/BoringMath.sol:47",
        "version": {
          "withMetadata": "91b4a994ce247e33f995d2b5b1dd30bd4b7155d11d3c0ad169a953893bfee109",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sSeaERC20": {
        "src": "contracts/sseaERC20.sol:14",
        "version": {
          "withMetadata": "56d9b77f371fa091cb4c6ac48ab654c8845359659c2e1003012dfc86948f6a67",
          "withoutMetadata": "39ff28111de50d1b93f4c821ec699beeb09fc1b72df207e7567fcdd1c26d9023",
          "linkedWithoutMetadata": "39ff28111de50d1b93f4c821ec699beeb09fc1b72df207e7567fcdd1c26d9023"
        },
        "inherit": [
          "Domain",
          "IERC20"
        ],
        "libraries": [
          "BoringMath",
          "BoringMath128",
          "BoringERC20"
        ],
        "methods": [
          "(address)",
          "owner()",
          "transferOwnership(address)",
          "setLOCK_TIME(uint256)",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "DOMAIN_SEPARATOR()",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "mint(uint256)",
          "burn(address,uint256)",
          "burnFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sSeaERC20",
            "src": "contracts/sseaERC20.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LOCK_TIME",
            "src": "contracts/sseaERC20.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/sseaERC20.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:22"
            },
            {
              "label": "LOCK_TIME",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:24"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(User)1358_storage)",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:38"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:40"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sSeaERC20",
              "src": "contracts/sseaERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)1358_storage)": {
              "label": "mapping(address => struct sSeaERC20.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)1358_storage": {
              "label": "struct sSeaERC20.User",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockedUntil",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}